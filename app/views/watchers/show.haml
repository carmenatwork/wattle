.clearfix
  .states-container.pull-left
    .current_state{class: "#{@watcher.state}-tag"}
      = @watcher.state.capitalize

  .pull-right
    = render partial: "state", locals: {watcher: @watcher}
%h2
  = @watcher.display_name
%pre= @watcher.email
- if current_user == @watcher
  %p
    - if @watcher.api_key
      API Key:
      = @watcher.api_key
    = button_to "Reset API Key", reset_api_key_watcher_path(@watcher), class: 'btn btn-info', method: :post


=form_for current_user, id: "update-default-filters" do |f|
  .row
    .col-lg-2
      Default filters
      .watcher_default_filter_fields
        = render partial: 'filters/filter_fields', locals: {prefix: "watcher[default_filters]", filter_set: FilterSet.new(filters: @watcher.default_filters, default_filters: ApplicationController::DEFAULT_FILTERS)}

    .col-lg-2
      Email filters
      .watcher_email_filter_fields
        =render partial: 'filters/app_names', locals: {prefix: "watcher[email_filters]", filter_set: FilterSet.new(filters: @watcher.email_filters)}
        =render partial: 'filters/app_envs',  locals: {prefix: "watcher[email_filters]", filter_set: FilterSet.new(filters: @watcher.email_filters)}
        =render partial: 'filters/languages', locals: {prefix: "watcher[email_filters]", filter_set: FilterSet.new(filters: @watcher.email_filters)}

    .col-lg-2
      .tracker_api_settings
        = f.label :pivotal_tracker_api_key, "Pivotal Tracker API key"
        = f.text_field :pivotal_tracker_api_key

  = f.submit "Save"
