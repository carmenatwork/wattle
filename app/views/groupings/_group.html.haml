- wat = wats(group).order(:id).last
%article.group_listing{class: ["group_state_#{group.state}", "group_#{group_counter}"]}
  %h4
    .incident_user_count.pull-right #{ pluralize(group.app_user_count(filters: filters), 'user') } affected

    = link_to grouping_path(group, params.slice(:utf8, :filters)), class: "grouping_detail_link" do
      .incident_count
        = wats(group).count
      .incident_heading
        = wat_heading(wat).truncate(50)

  .row
    .col-md-7
      .grouping_body
        %dl.dl-horizontal
          .text
            %dt Application
            %dd #{ wat.app_name }: #{ wat.app_env }
            - if wat.page_url.present?
              .text
                %dt Page URL
                %dd= wat.page_url.truncate(70)
          .text
            %dt Backtrace
            %dd= (wat.key_line || "").truncate(70)
          .text
            %dt Language
            %dd= wat.language.capitalize
          .text
            %dt State
            %dd #{ group.state.capitalize }
          .code
            - if wat_heading(wat) != wat.message && wat.message.present?
              %dt Message
              %dd
                %pre= wat.message.truncate(100)

    .col-md-5
      .group_state.pull-right
        .clearfix
          = render partial: "state", locals: {group: group}

        .timestamp.mt10
          - if wat.captured_at.present?
            Last Seen
            %span.light-text.moment_ago{data: {time: wat.captured_at.iso8601}}
            at
            = wat.captured_at.localtime.strftime("%a, %b %d at %l:%M %p %z")
